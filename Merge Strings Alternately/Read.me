# Merge Strings Alternately

You are given two strings `word1` and `word2`. Merge the strings by adding letters in alternating order, starting with `word1`. If a string is longer than the other, append the additional letters onto the end of the merged string.

## Problem Description

Given two strings `word1` and `word2`, merge them by alternating their characters, starting with `word1`. If one string is longer than the other, append the remaining characters of the longer string to the merged string.

## Examples

### Example 1

**Input:**
word1 = "abc"
word2 = "pqr"

**Output:**
"apbqcr"

**Explanation:**
The merged string will be:

word1: a b c
word2: p q r
merged: a p b q c r


### Example 2

**Input:**
word1 = "ab"
word2 = "pqrs"

**Output:**
"apbqrs"


**Explanation:**
Notice that as `word2` is longer, "rs" is appended to the end:

word1: a b
word2: p q r s
merged: a p b q r s


### Example 3

**Input:**
word1 = "abcd"
word2 = "pq"


**Output:**
"apbqcd"


**Explanation:**
Notice that as `word1` is longer, "cd" is appended to the end:

word1: a b c d
word2: p q
merged: a p b q c d


## Constraints

- `1 <= word1.length, word2.length <= 100`
- `word1` and `word2` consist of lowercase English letters.

## Solution

Here is a Python function that solves the problem:

```python
def merge_alternately(word1, word2):
    # Initialize an empty list to store the merged characters
    merged = []
    
    # Get the lengths of the two words
    len1, len2 = len(word1), len(word2)
    
    # Iterate over the range of the longer word
    for i in range(max(len1, len2)):
        if i < len1:
            merged.append(word1[i])
        if i < len2:
            merged.append(word2[i])
    
    # Join the list into a string and return it
    return ''.join(merged)

# Example usage
print(merge_alternately("abc", "pqr"))  # Output: "apbqcr"
print(merge_alternately("ab", "pqrs"))  # Output: "apbqrs"
print(merge_alternately("abcd", "pq"))  # Output: "apbqcd"

